@import 'common';

.theme-oo-ui-widget () {}

.theme-oo-ui-actionWidget () {}

.theme-oo-ui-buttonWidget () {
	.oo-ui-inline-spacing( 0.5em );
}

.theme-oo-ui-buttonGroupWidget () {
	display: inline-block;
	white-space: nowrap;
	border-radius: @border-radius-base;
	.oo-ui-inline-spacing( 0.5em );
	// Create a stacking context, so that we can use `z-index` below without leaking out
	z-index: 0;
	position: relative;

	// Overrides both, ButtonWidget & ToggleButtonWidget
	.oo-ui-buttonElement {
		.oo-ui-inline-spacing( 0 );
		z-index: 0;
	}

	.oo-ui-buttonElement-framed {
		.oo-ui-buttonElement-button {
			margin-left: -@border-width-base;
			border-radius: 0;
		}

		&:first-child .oo-ui-buttonElement-button {
			margin-left: 0;
			border-bottom-left-radius: @border-radius-base;
			border-top-left-radius: @border-radius-base;
		}

		&:last-child .oo-ui-buttonElement-button {
			border-bottom-right-radius: @border-radius-base;
			border-top-right-radius: @border-radius-base;
		}

		&.oo-ui-widget-disabled + .oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				border-left-color: @border-color-filled--disabled;
			}
		}
	}

	// Give hovered/focussed/active buttons higher `z-index`, so that borders display right.
	// Identical to .theme-oo-ui-buttonSelectWidget, except for the `:focus` selector.
	&.oo-ui-widget-enabled {
		.oo-ui-buttonElement {
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:active {
				z-index: 1;
			}

			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:focus {
				z-index: 2;
			}

			&.oo-ui-buttonElement-active > .oo-ui-buttonElement-button {
				z-index: 3;
			}

			&.oo-ui-widget-disabled > .oo-ui-buttonElement-button {
				z-index: -1;
			}

			&.oo-ui-toggleWidget-on + .oo-ui-toggleWidget-on {
				> .oo-ui-buttonElement-button,
				> .oo-ui-buttonElement-button:active {
					border-left-color: @border-color-base;
					z-index: 3;
				}
			}
		}
	}
}

.theme-oo-ui-buttonInputWidget () {}

.theme-oo-ui-buttonOptionWidget () {}

.theme-oo-ui-buttonSelectWidget () {
	border-radius: @border-radius-base;
	.oo-ui-inline-spacing( 0.5em );
	// Create a stacking context, so that we can use `z-index` below without leaking out
	z-index: 0;
	position: relative;

	&:focus {
		outline: 0;
	}

	.oo-ui-buttonOptionWidget {
		.oo-ui-buttonElement-button {
			margin-left: -@border-width-base;
			border-radius: 0;
		}

		&:first-child .oo-ui-buttonElement-button {
			margin-left: 0;
			border-bottom-left-radius: @border-radius-base;
			border-top-left-radius: @border-radius-base;
		}

		&:last-child .oo-ui-buttonElement-button {
			border-bottom-right-radius: @border-radius-base;
			border-top-right-radius: @border-radius-base;
		}

		&.oo-ui-widget-disabled + .oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				border-left-color: @border-color-filled--disabled;
			}
		}
	}

	&.oo-ui-widget-enabled {
		&:focus {
			.oo-ui-buttonOptionWidget.oo-ui-optionWidget-selected {
				.oo-ui-buttonElement-button {
					border-color: @border-color-base--focus;
					box-shadow: @box-shadow-progressive--focus;
				}
			}
		}

		// Give hovered/focussed/active buttons higher `z-index`, so that borders display right.
		// Identical to .theme-oo-ui-buttonGroupWidget, except we don't need `:focus` selector.
		.oo-ui-buttonElement {
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:hover,
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:active {
				z-index: 1;
			}

			&.oo-ui-buttonElement-active > .oo-ui-buttonElement-button {
				z-index: 3;
			}

			&.oo-ui-widget-disabled > .oo-ui-buttonElement-button {
				z-index: -1;
			}
		}
	}
}

.theme-oo-ui-capsuleItemWidget () {
	.oo-ui-box-sizing( border-box );
	width: auto;
	max-width: 100%;
	height: @height-tagitem;
	margin: @margin-top-tagitem @end-tagitem 0 0;
	border: @border-base;
	border-radius: @border-radius-base;
	padding: 0 @padding-horizontal-tagitem;
	line-height: @height-tagitem;
	vertical-align: middle;

	&.oo-ui-widget-enabled {
		background-color: @background-color-framed;
		color: @color-base;
		padding-right: @padding-end-tagitem-close;
		.oo-ui-transition(
			background-color @transition-ease-quick,
			color @transition-ease-quick,
			border-color @transition-ease-quick,
			box-shadow @transition-ease-quick
		);

		&:hover {
			background-color: @background-color-framed--hover;
			color: @color-base--hover;
			border-color: @border-color-base--hover;
		}

		&:focus {
			border-color: @border-color-base--focus;
			box-shadow: @box-shadow-widget--focus;
			outline: 0;
		}

		// Clear button
		> .oo-ui-buttonElement {
			display: block;
			position: absolute;
			top: 0;
			right: 0;
		}
		& .oo-ui-buttonElement-button {
			// frameless reset
			min-width: 0;
			min-height: 0;
			border: 0;
			padding-top: @size-icon-tagitem-close;
			padding-left: @size-icon-tagitem-close;

			.oo-ui-icon-close {
				left: 0;
				min-width: @min-size-tagitem-close;
				min-height: @min-size-tagitem-close;
				width: @size-icon-tagitem-close;
			}

			.oo-ui-labelElement-label,
			.oo-ui-indicatorElement-indicator {
				display: none;
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-base--disabled;
		color: @color-base--disabled;
		border-color: @border-color-base--disabled;
		text-shadow: @text-shadow-base--disabled;

		// Clear button
		> .oo-ui-buttonElement {
			display: none;
		}
	}
}

.theme-oo-ui-capsuleMultiselectWidget () {
	width: 100%;
	max-width: @max-width-input;

	&-handle {
		.oo-ui-box-sizing( border-box );
		min-height: @min-height-widget-base;
		.oo-ui-inline-spacing( 0.5em );
		border: @border-base;
		border-radius: @border-radius-base;
		padding: 0 @padding-horizontal-input-text @padding-vertical-label;
		line-height: @line-height-reset;

		> .oo-ui-capsuleMultiselectWidget-content {
			> input {
				background-color: transparent;
				color: @color-base--emphasized;
				border: 0;
				margin: @margin-top-tagmultiselect-input 0 0 @start-tagmultiselect-input;
				padding: 0;
				font-family: inherit;
				font-size: inherit;
				line-height: @line-height-tagmultiselect-input;
				vertical-align: middle;

				.mw-placeholder();

				&:focus {
					outline: 0; // Support: Chrome
				}
			}

			.oo-ui-capsuleMultiselectWidget-group:empty + input { // Support: IE 9+ & modern browsers only
				margin-left: 0;
			}
		}
	}

	&.oo-ui-iconElement &-handle {
		padding-left: @padding-start-input-text-icon-label;

		> .oo-ui-iconElement-icon {
			left: @padding-start-input-text-icon;
		}
	}

	&.oo-ui-indicatorElement &-handle {
		padding-right: @size-indicator + 2 * @padding-horizontal-base;

		> .oo-ui-indicatorElement-indicator {
			right: @padding-horizontal-base; // Use `@paddingâ€¦` as `right` value
		}
	}

	&-popup {
		margin-top: -@border-width-base;

		> .oo-ui-popupWidget-popup {
			border: 0;
		}
	}

	&.oo-ui-widget-enabled &-handle {
		background-color: @background-color-base;
		cursor: text;
		.oo-ui-transition(
			border-color @transition-ease-out-sine-medium,
			box-shadow @transition-ease-out-sine-medium
		);
	}
	&.oo-ui-widget-enabled:hover &-handle {
		border-color: @border-color-input--hover;
	}
	&.oo-ui-widget-enabled.oo-ui-capsuleMultiselectWidget-open &-handle {
		border-color: @border-color-base--focus;
		outline: 0;
		box-shadow: @box-shadow-widget--focus;
	}

	&.oo-ui-widget-disabled &-handle {
		color: @color-base--disabled;
		text-shadow: @text-shadow-base--disabled;
		border-color: @border-color-base--disabled;
		background-color: @background-color-base--disabled;

		> .oo-ui-iconElement-icon {
			opacity: @opacity-base--disabled;
		}

		> .oo-ui-indicatorElement-indicator {
			opacity: @opacity-indicator--disabled;
		}
	}
}

.theme-oo-ui-checkboxInputWidget () {
	position: relative;
	line-height: @size-input-binary;
	// Prevent the fake span from jumping to the next line of text
	white-space: nowrap;
	// Support: Firefox weird rendering issue needs this workaround, see T171022
	display: inline-block;

	* {
		font: inherit;
		vertical-align: middle;
	}

	// `<input type=checkbox>` element is visually replaced by `span` that follows
	[ type='checkbox' ] {
		position: relative;
		// Support: Firefox mobile to override user-agent stylesheet, see T73750
		max-width: none;
		// Ensure the invisible input takes up the required width
		width: @size-input-binary;
		height: @size-input-binary;
		// Having margin would offset the input from where the span is absolutely positioned,
		// making only the overlap region receive events
		margin: 0;
		// Use opacity so that VoiceOver can still identify it
		opacity: 0;
		// Render "on top of" the span, so that it's still clickable
		z-index: 1;

		& + span {
			background-color: @background-color-base;
			background-origin: border-box;
			background-position: center center;
			background-repeat: no-repeat;
			background-size: 0 0;
			.oo-ui-box-sizing( border-box );
			position: absolute;
			left: 0;
			width: @size-input-binary;
			height: @size-input-binary;
			border: @border-input-binary;
			border-radius: @border-radius-base;
		}

		&:checked {
			& + span {
				.oo-ui-background-image-svg( '@{oo-ui-default-image-path}/icons/check-invert' );
				.oo-ui-background-image-safari( '@{oo-ui-default-image-path}/icons/check-invert' );
				background-size: 90% 90%;
			}
		}

		&:disabled {
			& + span {
				background-color: @background-color-filled--disabled;
				border-color: @border-color-base--disabled;
			}
		}
	}

	&.oo-ui-widget-enabled [ type='checkbox' ] {
		cursor: pointer;

		& + span {
			cursor: pointer;
			.oo-ui-transition(
				background-color @transition-ease-quick,
				background-size @transition-ease-quick,
				border-color @transition-ease-quick,
				box-shadow @transition-ease-quick
			);
		}

		// `:focus` has to come first, otherwise a specificity race with `:hover:focus` etc is necessary
		&:focus + span {
			border-color: @color-progressive;
			box-shadow: @box-shadow-widget--focus;
		}

		&:hover + span {
			border-color: @color-progressive;
		}

		&:active + span {
			background-color: @color-progressive--active;
			border-color: @border-color-input-binary--active;
			box-shadow: @box-shadow-input-binary--active;
		}

		&:checked {
			& + span {
				background-color: @background-color-input-binary--checked;
				border-color: @border-color-input-binary--checked;
			}

			&:focus + span {
				background-color: @background-color-input-binary--checked;
				border-color: @border-color-input-binary--checked;
				box-shadow: @box-shadow-progressive--focus;
			}

			&:hover + span {
				background-color: @color-progressive--hover;
				border-color: @color-progressive--hover;
			}

			&:active + span {
				background-color: @background-color-input-binary--active;
				border-color: @border-color-input-binary--active;
				box-shadow: @box-shadow-input-binary--active;
			}
		}
	}
}

.theme-oo-ui-checkboxMultioptionWidget () {
	padding: @padding-vertical-label 0;

	&.oo-ui-labelElement .oo-ui-labelElement-label {
		padding-left: @padding-start-input-binary-label;
	}

	.oo-ui-checkboxInputWidget {
		margin-right: 0;
	}
}

.theme-oo-ui-checkboxMultiselectWidget () {}

.theme-oo-ui-checkboxMultiselectInputWidget () {
	.oo-ui-fieldLayout {
		margin-top: @padding-vertical-label; // `@padding-vertical-label` used as `margin-top` here

		.oo-ui-fieldLayout-body .oo-ui-labelElement-label {
			line-height: @line-height-input-binary-label;
		}
	}
}

.theme-oo-ui-comboBoxInputWidget () {
	// inherits from `inputWidget` & `textInputWidget`

	input {
		height: @size-base;
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
		border-right-width: 0;
	}

	// Undo setting properties above when there is no button:
	// if the menu is empty, or if this is the PHP version
	&.oo-ui-comboBoxInputWidget-empty input,
	&-php input {
		border-top-right-radius: @border-radius-base;
		border-bottom-right-radius: @border-radius-base;
		border-right-width: @border-width-base;
	}

	&-dropdownButton.oo-ui-indicatorElement {
		width: @width-button-combo-widget;

		.oo-ui-buttonElement-button {
			min-width: @min-width-button-combo-widget;
			min-height: @min-height-widget-base;
			padding-left: 0;

			> .oo-ui-indicatorElement-indicator {
				right: @start-framed-square-indicator-only;
			}
		}

		.oo-ui-buttonElement-button,
		.oo-ui-buttonElement-button:focus {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}
	}

	&-php .oo-ui-indicatorWidget {
		right: @padding-horizontal-base;
		margin: 0;
	}

	&-open &-dropdownButton {
		> .oo-ui-buttonElement-button {
			background-color: @background-color-framed--hover;

			.oo-ui-indicatorElement-indicator {
				opacity: @opacity-icon-base--selected;
			}
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-filled--disabled;
		}
	}
}

.theme-oo-ui-decoratedOptionWidget () {
	padding: @padding-menu;
	line-height: @line-height-reset;

	&.oo-ui-iconElement {
		padding-left: @padding-start-menu-icon-label;

		.oo-ui-iconElement-icon {
			left: @padding-horizontal-base;
		}
	}

	.oo-ui-labelElement-label {
		line-height: @line-height-widget-singleline;
	}

	&.oo-ui-indicatorElement {
		padding-right: @padding-start-indicator-plus;

		.oo-ui-indicatorElement-indicator {
			right: @padding-horizontal-base;
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-iconElement-icon,
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-base--disabled;
		}
	}
}

.theme-oo-ui-dropdownWidget () {
	width: 100%;
	max-width: @max-width-input;
	.oo-ui-inline-spacing( 0.5em );

	&-handle {
		min-height: @min-height-widget-base; // Address label-less widgets
		border: @border-base;
		border-radius: @border-radius-base;
		padding: @padding-base;
		line-height: @line-height-reset;

		.oo-ui-iconElement-icon {
			left: @padding-start-input-text-icon;
		}

		.oo-ui-indicatorElement-indicator {
			right: @padding-horizontal-base;
		}

		.oo-ui-labelElement-label {
			line-height: @line-height-widget-singleline;
		}
	}

	&.oo-ui-iconElement &-handle {
		padding-left: @padding-start-input-text-icon-label;
	}

	&.oo-ui-indicatorElement &-handle {
		padding-right: @size-indicator + @padding-horizontal-base;
	}

	&.oo-ui-widget-enabled &-handle {
		background-color: @background-color-framed;
		color: @color-base;
		.oo-ui-transition(
			background-color @transition-ease-quick,
			border-color @transition-ease-quick,
			box-shadow @transition-ease-quick
		);

		&:hover {
			background-color: @background-color-framed--hover;
			color: @color-base--hover;
			border-color: @border-color-base--hover;

			.oo-ui-iconElement-icon,
			.oo-ui-indicatorElement-indicator {
				opacity: @opacity-icon-base--hover;
			}
		}

		&:active {
			color: @color-base--active;
			border-color: @border-color-base--active;
		}

		&:focus {
			border-color: @border-color-base--focus;
			outline: 0;
			box-shadow: @box-shadow-widget--focus;
		}

		.oo-ui-iconElement-icon,
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base;
			.oo-ui-transition(
				opacity @transition-ease-quick
			);
		}
	}

	&.oo-ui-widget-enabled&-open &-handle {
		background-color: @background-color-framed--hover;

		.oo-ui-iconElement-icon,
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base--selected;
		}
	}

	&.oo-ui-widget-disabled &-handle {
		color: @color-base--disabled;
		text-shadow: @text-shadow-base--disabled;
		border-color: @border-color-base--disabled;
		background-color: @background-color-base--disabled;

		&:focus {
			outline: 0;
		}

		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-indicator--disabled;
		}
	}
}

.theme-oo-ui-dropdownInputWidget () {
	width: 100%;
	max-width: @max-width-input;

	&-php {
		border-right: @border-base;
		border-radius: @border-radius-base;
		overflow-x: hidden;
	}

	select {
		// Remove user agent styles
		-webkit-appearance: none;
		-moz-appearance: none;
		.oo-ui-box-sizing( border-box );
		border: @border-base;
		border-radius: @border-radius-base;
		padding: @padding-base;
		font-size: inherit;
		font-family: inherit;
		vertical-align: middle;

		// Support IE 10-11: Hide the default arrow
		&::-ms-expand {
			display: none;
		}

		// Add custom dropdown arrow
		// Support: Everything besides IE 6-8
		&:not( [ no-ie ] ) {
			background-position: right 1.75em center;
			width: e( 'calc( 100% + 1em )' );
			height: @size-base;
			padding: 0 0 0 @padding-horizontal-base;
		}
	}

	option {
		font-size: inherit;
		font-family: inherit;
		height: 1.5em;
		padding: @padding-bottom-menu @padding-horizontal-base; // `@padding-bottom-menu` used as vertical `padding` here as we don't have a lot of layout leverage on `option`
	}

	&.oo-ui-widget-enabled {
		select {
			background-color: @background-color-framed;
			color: @color-base;
			.oo-ui-transition(
				background-color @transition-ease-quick,
				border-color @transition-ease-quick,
				box-shadow @transition-ease-quick
			);

			&:hover {
				background-color: @background-color-framed--hover;
				color: @color-base--hover;
				border-color: @border-color-base--hover;
			}

			&:active {
				color: @color-base--active;
				border-color: @border-color-base--active;
			}

			&:focus {
				border-color: @border-color-base--focus;
				outline: 0;
				box-shadow: @box-shadow-widget--focus;
			}
		}
	}

	&.oo-ui-widget-disabled {
		select {
			background-color: @background-color-base--disabled;
			color: @color-base--disabled;
			border-color: @border-color-base--disabled;
		}
	}
}

.theme-oo-ui-iconWidget () {
	line-height: 2.5;

	&.oo-ui-iconElement.oo-ui-iconElement-icon {
		display: inline-block;
		position: static;
		top: auto;
		height: @size-icon;
	}

	&.oo-ui-widget-disabled {
		opacity: @opacity-base--disabled;
	}
}

.theme-oo-ui-indicatorWidget () {
	line-height: 2.5;
	margin: @size-indicator / 2;

	&.oo-ui-indicatorElement.oo-ui-indicatorElement-indicator {
		display: inline-block;
		position: static;
		top: auto;
		height: @size-indicator;
	}

	&.oo-ui-widget-disabled {
		opacity: @opacity-base--disabled;
	}
}

.theme-oo-ui-inputWidget () {
	.oo-ui-inline-spacing( 0.5em );
}

.theme-oo-ui-labelWidget () {}

.theme-oo-ui-menuOptionWidget () {
	.oo-ui-transition(
		background-color @transition-ease-quick,
		color @transition-ease-quick
	);

	&.oo-ui-optionWidget {
		&-highlighted {
			background-color: @background-color-base--hover;
			color: @color-base--emphasized;
		}
		&-selected {
			background-color: @background-color-progressive;
			color: @color-progressive;
		}
		&-selected&-highlighted,
		&-pressed&-highlighted {
			background-color: @background-color-progressive--hover;
			color: @color-progressive;
		}
	}
}

.theme-oo-ui-menuSectionOptionWidget () {
	color: @color-base--subtle;
	padding: @padding-top-menu @padding-horizontal-base @padding-vertical-label;
	font-weight: bold;

	& ~ .oo-ui-menuOptionWidget {
		padding-left: 2 * @padding-horizontal-base;

		&.oo-ui-iconElement {
			padding-left: @padding-start-menu-icon-label + @padding-horizontal-base;

			.oo-ui-iconElement-icon {
				left: 2 * @padding-horizontal-base;
			}
		}
	}
}

.theme-oo-ui-menuSelectWidget () {
	background-color: @background-color-base;
	margin-top: -1px;
	border: @border-menu;
	border-radius: 0 0 @border-radius-base @border-radius-base;
	box-shadow: @box-shadow-menu;
}

.theme-oo-ui-multioptionWidget () {
	&.oo-ui-widget-disabled {
		color: @color-base--disabled;
	}
}

.theme-oo-ui-multiselectWidget () {}

.theme-oo-ui-numberInputWidget () {
	max-width: @max-width-input;

	&-buttoned {
		.oo-ui-buttonWidget {
			width: @width-button-combo-widget;

			.oo-ui-buttonElement-button {
				display: block;
				min-width: @min-width-button-combo-widget;
				min-height: @min-height-widget-base;
				padding-left: 0;
				padding-right: 0;

				.oo-ui-iconElement-icon {
					left: @start-framed-icon-only-numberinput;
					min-width: @min-width-icon-numberinput;
					width: @size-icon-numberinput;
				}
			}
		}

		.oo-ui-inputWidget-input {
			border-radius: 0;
		}
	}

	&-minusButton > .oo-ui-buttonElement-button {
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
		border-right-width: 0;
	}

	&-plusButton > .oo-ui-buttonElement-button {
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
		border-left-width: 0;
	}

	&.oo-ui-widget-disabled {
		&.oo-ui-numberInputWidget-buttoned .oo-ui-iconElement-icon {
			opacity: 1;
		}
	}
}

.theme-oo-ui-optionWidget () {
	.oo-ui-labelElement-label {
		line-height: @line-height-base;
	}

	// Don't add `highlighted` or `selected` modifications here
	// as it inherits to various visually opposite widgets.

	&-selected .oo-ui-buttonElement-button > .oo-ui-iconElement-icon {
		opacity: @opacity-icon-base--selected;
	}

	&.oo-ui-widget-disabled {
		color: @color-base--disabled;
	}
}

.theme-oo-ui-outlineControlsWidget () {
	background-color: @background-color-base;

	&-items,
	&-movers {
		> .oo-ui-buttonWidget {
			height: @size-base;
			width: @size-base;
			// There's a lot of weird specific margins with weird specific selectors
			margin: 0 !important; /* stylelint-disable-line declaration-no-important */
		}
	}

	> .oo-ui-iconElement-icon {
		height: @size-base;
		opacity: 0.2;
	}
}

.theme-oo-ui-outlineOptionWidget () {
	padding: @padding-menu-large;
	.oo-ui-transition(
		background-color @transition-ease-quick,
		color @transition-ease-quick
	);

	&.oo-ui-optionWidget-highlighted {
		background-color: @background-color-base--hover;
		color: @color-base--emphasized;
	}

	&.oo-ui-optionWidget-selected {
		background-color: @background-color-progressive;
		color: @color-progressive;
	}

	&.oo-ui-optionWidget-pressed {
		background-color: @background-color-progressive--hover;
		color: @color-progressive;
	}

	&.oo-ui-indicatorElement {
		.oo-ui-labelElement-label {
			padding-right: 1.5em;
		}

		.oo-ui-indicatorElement-indicator {
			opacity: 0.5;
		}
	}

	.oo-ui-labelElement-label {
		font-size: 1.1em;
	}

	&-level-1 {
		padding-left: 2.571em;

		&.oo-ui-iconElement {
			padding-left: 4.429em;

			.oo-ui-iconElement-icon {
				left: 2.571em;
			}
		}
	}

	&-level-2 {
		padding-left: 5.142em;

		&.oo-ui-iconElement {
			padding-left: 6.857em;

			.oo-ui-iconElement-icon {
				left: 4.429em;
			}
		}
	}
}

.theme-oo-ui-outlineSelectWidget () {
	height: 100%;

	&:focus {
		box-shadow: inset 0 0 0 2px @color-progressive;
	}
}

.theme-oo-ui-popupWidget () {
	&-popup {
		background-color: @background-color-base;
		border: @border-menu;
		border-radius: @border-radius-base;
		box-shadow: @box-shadow-menu;
	}

	&-anchored-top {
		margin-top: @size-anchor;

		.oo-ui-popupWidget-anchor {
			top: -@size-anchor;

			&:before {
				bottom: -@size-anchor - 1px;
				left: -@size-anchor;
				border-bottom-color: @border-color-base;
				border-width: @size-anchor + 1px;
			}

			&:after {
				bottom: -@size-anchor - 1px;
				left: -@size-anchor + 1px;
				border-bottom-color: @background-color-base; // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
				border-width: @size-anchor;
			}
		}
	}

	&-anchored-bottom {
		margin-bottom: @size-anchor;

		.oo-ui-popupWidget-anchor {
			bottom: -@size-anchor;

			&:before {
				top: -@size-anchor - 1px;
				left: -@size-anchor;
				border-top-color: @border-color-base;
				border-width: @size-anchor + 1px;
			}

			&:after {
				top: -@size-anchor - 1px;
				left: -@size-anchor + 1px;
				border-top-color: @background-color-base; // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
				border-width: @size-anchor;
			}
		}
	}

	&-anchored-start {
		margin-left: @size-anchor;

		.oo-ui-popupWidget-anchor {
			left: -@size-anchor;

			&:before {
				right: -@size-anchor - 1px;
				top: -@size-anchor;
				border-right-color: @border-color-base;
				border-width: @size-anchor + 1px;
			}

			&:after {
				right: -@size-anchor - 1px;
				top: -@size-anchor + 1px;
				border-right-color: @background-color-base;  // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
				border-width: @size-anchor;
			}
		}
	}

	&-anchored-end {
		margin-right: @size-anchor;

		.oo-ui-popupWidget-anchor {
			right: -@size-anchor;

			&:before {
				left: -@size-anchor - 1px;
				top: -@size-anchor;
				border-left-color: @border-color-base;
				border-width: @size-anchor + 1px;
			}

			&:after {
				left: -@size-anchor - 1px;
				top: -@size-anchor + 1px;
				border-left-color: @background-color-base;  // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
				border-width: @size-anchor;
			}
		}
	}

	&-transitioning .oo-ui-popupWidget-popup {
		.oo-ui-transition(
			width @transition-ease-quick,
			height @transition-ease-quick,
			left @transition-ease-quick
		);
	}

	&-head {
		> .oo-ui-labelElement-label {
			margin: @padding-top-menu @padding-start-input-text-icon-label @padding-bottom-menu @padding-horizontal-base;
			line-height: @line-height-widget-singleline;
		}

		> .oo-ui-buttonWidget {
			// `top: 0;` not needed as default value
			right: 0;
		}
	}

	&-body {
		line-height: @line-height-message;

		&-padded {
			margin: @padding-top-menu @padding-horizontal-base @padding-bottom-menu;// Use `margin` rather than `padding` to enable margin to collapse

			> :first-child {
				margin-top: 0;
			}
		}
	}

	&-footer {
		margin: @padding-top-menu @padding-horizontal-base @padding-bottom-menu;
	}
}

.theme-oo-ui-popupButtonWidget () {
}

.theme-oo-ui-progressBarWidget () {
	max-width: @max-width-base;
	background-color: @background-color-base;
	border: @border-base;
	border-radius: @border-radius-base;
	overflow: hidden;

	&-bar {
		height: 1em;
		.oo-ui-transition( width 200ms );
	}
	&-indeterminate {
		.oo-ui-progressBarWidget-bar {
			.oo-ui-animation( oo-ui-progressBarWidget-slide 2s infinite linear );
			width: 40%;
			.oo-ui-transform( translate( -25% ) );
			border-left-width: @border-width-base;
		}
	}
	&.oo-ui-widget-enabled {
		.oo-ui-progressBarWidget-bar {
			background-color: @color-progressive;
		}
	}
	&.oo-ui-widget-disabled {
		.oo-ui-progressBarWidget-bar {
			background-color: @background-color-filled--disabled;
		}
	}

	.oo-ui-progressBarWidget-slide-frames () {
		from {
			.oo-ui-transform( translate( -100% ) );
		}
		to {
			.oo-ui-transform( translate( 350% ) );
		}
	}
	@-webkit-keyframes oo-ui-progressBarWidget-slide {
		.oo-ui-progressBarWidget-slide-frames;
	}
	@-moz-keyframes oo-ui-progressBarWidget-slide {
		.oo-ui-progressBarWidget-slide-frames;
	}
	@keyframes oo-ui-progressBarWidget-slide {
		.oo-ui-progressBarWidget-slide-frames;
	}
}

.theme-oo-ui-radioInputWidget () {
	position: relative;
	line-height: @size-input-binary;
	// Prevent the fake span from jumping to the next line of text
	white-space: nowrap;
	// Support: Firefox weird rendering issue needs this workaround, see T171022
	display: inline-block;

	* {
		font: inherit;
		vertical-align: middle;
	}

	// `<input type=radio>` element is visually replaced by `span` that follows
	[ type='radio' ] {
		position: relative;
		// Support: Firefox mobile to override user-agent stylesheet, see T73750
		max-width: none;
		// Ensure the invisible input takes up the required width
		width: @size-input-binary;
		height: @size-input-binary;
		// Having margin would offset the input from where the span is absolutely positioned,
		// making only the overlap region receive events
		margin: 0;
		// Use opacity so that VoiceOver can still identify it
		opacity: 0;
		// Render "on top of" the span, so that it's still clickable
		z-index: 1;

		& + span {
			background-color: @background-color-base;
			position: absolute;
			left: 0;
			.oo-ui-box-sizing( border-box );
			width: @size-input-binary;
			height: @size-input-binary;
			border: @border-input-binary;
			border-radius: 100%;

			// Needed for `:focus` state's inner white circle
			&:before {
				content: ' ';
				position: absolute;
				top: -4px; // `px` unit due to pixel rounding error when using `@size-input-binary / 4`
				left: -4px;
				right: -4px;
				bottom: -4px;
				border: @border-width-base solid transparent;
				border-radius: 100%;
			}
		}

		&:checked {
			& + span,
			&:hover + span,
			&:focus:hover + span {
				border-width: @border-width-radio--checked;
			}
		}

		&:disabled {
			& + span {
				background-color: @background-color-filled--disabled;
				border-color: @border-color-base--disabled;
			}

			&:checked + span {
				background-color: @background-color-base;
			}
		}
	}

	&.oo-ui-widget-enabled [ type='radio' ] {
		cursor: pointer;

		& + span {
			cursor: pointer;
			.oo-ui-transition(
				background-color @transition-ease-quick,
				border-color @transition-ease-quick,
				border-width @transition-ease-quick
			);
		}

		&:hover + span {
			border-color: @color-progressive;
		}

		&:active + span {
			background-color: @background-color-input-binary--active;
			border-color: @border-color-input-binary--active;
		}

		&:checked {
			& + span {
				border-color: @border-color-input-binary--checked;
			}

			// `:focus` has to come first, otherwise a specificity race with `:hover:focus` etc is necessary
			&:focus + span {
				&:before {
					border-color: @background-color-base;
				}
			}

			&:hover + span {
				border-color: @color-progressive--hover;
			}

			&:active + span {
				border-color: @border-color-input-binary--active;
				box-shadow: @box-shadow-input-binary--active;

				&:before {
					border-color: @border-color-input-binary--active;
				}
			}
		}
	}
}

.theme-oo-ui-radioOptionWidget () {
	padding: @padding-vertical-label 0;

	&.oo-ui-labelElement .oo-ui-labelElement-label {
		padding-left: @padding-start-input-binary-label;
	}

	.oo-ui-radioInputWidget {
		margin-right: 0;
	}
}

.theme-oo-ui-radioSelectWidget () {
	&:focus {
		outline: 0;

		[ type='radio' ]:checked + span:before {
			border-color: @background-color-base;
		}
	}
}

.theme-oo-ui-radioSelectInputWidget () {
	.oo-ui-fieldLayout {
		margin-top: @padding-vertical-label; // `@padding-vertical-label` used as `margin-top` here

		.oo-ui-fieldLayout-body .oo-ui-labelElement-label {
			line-height: @line-height-input-binary-label;
		}
	}
}

.theme-oo-ui-searchWidget () {
	&-query {
		height: @height-search;
		padding: 0 @padding-search; // needs to be `padding` for `border`/`box-shadow` below
		border-bottom: @border-toolbar;
		box-shadow: @box-shadow-toolbar-top;

		.oo-ui-textInputWidget {
			margin: @margin-search 0;
		}
	}

	&-results {
		top: @height-search;
		padding: @padding-search;
		line-height: 0;
	}
}

.theme-oo-ui-selectWidget () {}

.theme-oo-ui-selectFileWidget () {
	width: 100%;
	max-width: @max-width-input;
	.oo-ui-inline-spacing( 0.5em );

	&-selectButton {
		> .oo-ui-buttonElement-button {
			border-radius: 0 @border-radius-base @border-radius-base 0;
		}
	}

	&-info {
		background-color: @background-color-base;
		border: @border-base;
		border-radius: @border-radius-base 0 0 @border-radius-base;
		border-right-width: 0;

		> .oo-ui-iconElement-icon {
			display: none;
			top: -@border-width-base; // Address `border-top` of parent element
			left: @padding-start-input-text-icon;
			min-height: @min-height-widget-base;
			margin-left: -@border-width-base; // Address extra `border-left` pixel above
		}

		> .oo-ui-indicatorElement-indicator {
			display: none;
			top: -@border-width-base; // Address `border-top` of parent element
			right: @padding-horizontal-base;
			min-height: @min-height-widget-base;
		}
	}

	&-label {
		.oo-ui-box-sizing( border-box );
		display: block;
		right: @size-icon + 0.5em; // With close, no indicator
		padding-top: @padding-top-base;
		padding-left: @padding-horizontal-input-text;
		padding-bottom: @padding-bottom-base;
		line-height: @line-height-widget-singleline;
		white-space: nowrap;
	}

	// Addressing overflowing (long) filenames
	&-fileName {
		display: block;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	&-clearButton {
		top: -1px; // Address `border-width`
		right: @padding-start-input-text-icon; // With close, no indicator
		min-width: @min-size-icon;
		width: @size-icon;
		margin-right: 0;

		.oo-ui-buttonElement-button > .oo-ui-iconElement-icon {
			height: @size-base;
		}
	}

	&-empty {
		.oo-ui-selectFileWidget-label {
			color: @color-base--disabled;
		}
	}

	&.oo-ui-iconElement {
		.oo-ui-selectFileWidget-label {
			left: @padding-start-input-text-icon-label;
		}
	}

	// With close, with indicator:
	&.oo-ui-indicatorElement {
		.oo-ui-selectFileWidget-label {
			right: @size-icon + @size-indicator + @padding-horizontal-base;
			padding-left: 0;
		}

		.oo-ui-selectFileWidget-clearButton {
			right: @size-indicator + 1.55em - 0.4em;
		}
	}

	&-empty,
	&-notsupported {
		// No close, with indicator:
		&.oo-ui-indicatorElement {
			.oo-ui-selectFileWidget-label {
				right: 2em;
			}
		}
	}

	&-dropTarget {
		background-color: @background-color-base;
		border: @border-base;
		border-radius: @border-radius-base;
		vertical-align: middle;
		overflow: hidden;

		.oo-ui-selectFileWidget-selectButton {
			> .oo-ui-buttonElement-button {
				border-radius: @border-radius-base;
			}
		}

		.oo-ui-selectFileWidget-label {
			line-height: @line-height-form-element;
			overflow: inherit;
			white-space: normal;
		}

		.oo-ui-selectFileWidget-fileName {
			padding-right: @padding-start-input-text-icon-label;
		}

		.oo-ui-selectFileWidget-clearButton {
			top: 0; // Reset from SelectFileWidget without drop target
		}
	}

	&-empty.oo-ui-widget-enabled {
		&.oo-ui-selectFileWidget-dropTarget {
			background-color: @background-color-base;
			border-style: dashed;
			.oo-ui-transition(
				background-color @transition-ease-out-sine-medium,
				color @transition-ease-out-sine-medium,
				border-color @transition-ease-out-sine-medium
			);

			&:hover {
				border-color: @border-color-input--hover;
			}
		}
	}

	&-supported.oo-ui-widget-enabled {
		&.oo-ui-selectFileWidget-canDrop.oo-ui-selectFileWidget-dropTarget {
			background-color: @background-color-progressive;
			color: @color-progressive--active-hover;
		}
	}

	&.oo-ui-widget-disabled,
	&-empty.oo-ui-widget-disabled {
		.oo-ui-selectFileWidget-info {
			background-color: @background-color-base--disabled;
			color: @color-base--disabled;
			border-color: @border-color-base--disabled;
			text-shadow: @text-shadow-base--disabled;

			> .oo-ui-iconElement-icon {
				opacity: @opacity-base--disabled;
			}

			> .oo-ui-indicatorElement-indicator {
				opacity: @opacity-indicator--disabled;
			}
		}

		&.oo-ui-selectFileWidget-dropTarget {
			background-color: @background-color-base--disabled;
			border-color: @border-color-base--disabled;
		}
	}

	&-notsupported {
		.oo-ui-selectFileWidget-info {
			background-color: @background-color-base--disabled;
			color: @color-base;
			border-color: @border-color-base--disabled;
		}

		&.oo-ui-selectFileWidget-dropTarget {
			background-color: @background-color-base--disabled;
			border-color: @border-color-base--disabled;

			.oo-ui-selectFileWidget-label {
				padding: 1em @padding-horizontal-base;
			}
		}
	}

	.oo-ui-widget-disabled &-dropLabel {
		display: none;
	}
}

.theme-oo-ui-tabOptionWidget () {
	color: @color-base;
	margin: @margin-taboption 0 0 @margin-taboption;
	border-color: transparent;
	border-style: @border-style-base;
	border-width: @border-width-base @border-width-base 0 @border-width-base;
	border-top-left-radius: @border-radius-base;
	border-top-right-radius: @border-radius-base;
	padding: @padding-taboption;
	font-weight: bold;
	line-height: @line-height-reset;
	.oo-ui-transition(
		background-color @transition-ease-quick,
		color @transition-ease-quick
	);

	&.oo-ui-optionWidget-selected {
		background-color: @background-color-base;
		color: @color-base--active;
	}

	.oo-ui-labelElement-label {
		line-height: @line-height-widget-singleline;
	}

	&.oo-ui-widget-enabled {
		&:hover {
			background-color: rgba( 255, 255, 255, 0.3 );
		}

		&:active {
			background-color: rgba( 255, 255, 255, 0.8 );
		}

		&.oo-ui-optionWidget-selected:hover {
			background-color: @background-color-base;
		}
	}
}

.theme-oo-ui-tabSelectWidget () {
	background-color: @background-color-tabs;
}

.theme-oo-ui-tagItemWidget () {
	.oo-ui-box-sizing( border-box );
	width: auto;
	max-width: 100%;
	height: @height-tagitem;
	margin: @margin-top-tagitem @end-tagitem 0 0;
	border: @border-base;
	border-radius: @border-radius-base;
	padding: 0 @padding-horizontal-tagitem;
	line-height: @height-tagitem;
	vertical-align: middle;

	&.oo-ui-widget-enabled {
		background-color: @background-color-framed;
		color: @color-base;
		padding-right: @padding-end-tagitem-close;
		.oo-ui-transition(
			background-color @transition-ease-quick,
			color @transition-ease-quick,
			border-color @transition-ease-quick,
			box-shadow @transition-ease-quick
		);

		&:hover {
			background-color: @background-color-framed--hover;
			color: @color-base--hover;
			border-color: @border-color-base--hover;
		}

		&:focus {
			border-color: @border-color-base--focus;
			box-shadow: @box-shadow-widget--focus;
			outline: 0;
		}

		&.oo-ui-flaggedElement-invalid {
			border-color: @border-color-erroneous;

			&:hover {
				border-color: @border-color-erroneous;
			}

			&:focus {
				border-color: @border-color-erroneous;
				box-shadow: @box-shadow-erroneous--focus;
			}
		}

		// Clear button
		> .oo-ui-buttonElement {
			display: block;
			position: absolute;
			top: 0;
			right: 0;
		}
		& .oo-ui-buttonElement-button {
			// frameless reset
			min-width: 0;
			min-height: 0;
			border: 0;
			padding-top: @size-icon-tagitem-close;
			padding-left: @size-icon-tagitem-close;

			.oo-ui-icon-close {
				left: 0;
				min-width: @min-size-tagitem-close;
				min-height: @min-size-tagitem-close;
				width: @size-icon-tagitem-close;
			}

			.oo-ui-labelElement-label,
			.oo-ui-indicatorElement-indicator {
				display: none;
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-base--disabled;
		color: @color-base--disabled;
		border-color: @border-color-base--disabled;
		text-shadow: @text-shadow-base--disabled;

		&:focus {
			outline: 0;
		}

		// Clear button
		> .oo-ui-buttonElement {
			display: none;
		}
	}
}

.theme-oo-ui-tagMultiselectWidget () {
	width: 100%;
	max-width: @max-width-input;

	&-handle {
		.oo-ui-box-sizing( border-box );
		min-height: @min-height-widget-base;
		.oo-ui-inline-spacing( 0.5em );
		border: @border-base;
		border-radius: @border-radius-base;
		padding: 0 @padding-horizontal-input-text @padding-vertical-label;
		line-height: @line-height-reset;

		> .oo-ui-tagMultiselectWidget-content {
			> input {
				background-color: transparent;
				color: @color-base--emphasized;
				margin: @margin-top-tagmultiselect-input 0 0 @start-tagmultiselect-input;
				border: 0;
				padding: 0;
				font-family: inherit;
				font-size: inherit;
				line-height: @line-height-tagmultiselect-input;
				vertical-align: middle;

				.mw-placeholder();

				&:focus {
					outline: 0; // Support: Chrome
				}
			}

			.oo-ui-tagMultiselectWidget-group:empty + input { // Support: IE 9+ & modern browsers only
				margin-left: 0;
			}
		}
	}

	&.oo-ui-iconElement &-handle {
		padding-left: @size-icon + 2 * 0.3em;

		> .oo-ui-iconElement-icon {
			left: 0;
			margin: 0 0.3em;
		}
	}

	&.oo-ui-indicatorElement &-handle {
		padding-right: @size-indicator + 2 * 0.775em;

		> .oo-ui-indicatorElement-indicator {
			right: 0;
			margin: 0 0.775em;
		}
	}

	&.oo-ui-widget-enabled {
		.oo-ui-tagMultiselectWidget-handle {
			background-color: @background-color-base;
			.oo-ui-transition(
				border-color @transition-ease-out-sine-medium,
				box-shadow @transition-ease-out-sine-medium
			);
		}

		&.oo-ui-tagMultiselectWidget-inlined {
			&:hover .oo-ui-tagMultiselectWidget-handle {
				border-color: @border-color-input--hover;
			}

			&.oo-ui-tagMultiselectWidget-focus .oo-ui-tagMultiselectWidget-handle {
				border-color: @border-color-base--focus;
				outline: 0;
				box-shadow: @box-shadow-widget--focus;
			}
		}

		&.oo-ui-tagMultiselectWidget-outlined {
			.oo-ui-tagMultiselectWidget-handle {
				background-color: @background-color-base--read-only;
				border-bottom: 0;
				border-bottom-left-radius: 0;
				border-bottom-right-radius: 0;
			}

			.oo-ui-tagItemWidget.oo-ui-widget-enabled {
				background-color: @background-color-base;
			}

			.oo-ui-inputWidget-input {
				border-top-left-radius: 0;
				border-top-right-radius: 0;
			}
		}
	}

	&.oo-ui-widget-disabled &-handle {
		color: @color-base--disabled;
		text-shadow: @text-shadow-base--disabled;
		border-color: @border-color-base--disabled;
		background-color: @background-color-base--disabled;

		> .oo-ui-iconElement-icon {
			opacity: @opacity-base--disabled;
		}

		> .oo-ui-indicatorElement-indicator {
			opacity: @opacity-indicator--disabled;
		}
	}
}

.theme-oo-ui-textInputWidget () {
	width: 100%;
	max-width: @max-width-input;

	input,
	textarea {
		-webkit-appearance: none; // Support: Safari/iOS
		margin: 0;
		font-size: inherit;
		font-family: inherit;
		background-color: @background-color-base;
		color: @color-base--emphasized;
		border: @border-base;
		border-radius: @border-radius-base;
		padding: @padding-input-text;
	}

	input {
		line-height: @line-height-widget-singleline;
	}

	textarea {
		line-height: @line-height-widget-multiline;
	}

	.oo-ui-pendingElement-pending {
		background-color: transparent;
	}

	&.oo-ui-widget-enabled {
		input,
		textarea {
			box-shadow: @box-shadow-widget; // necessary for smooth transition
			.oo-ui-transition(
				border-color @transition-ease-out-sine-medium,
				box-shadow @transition-ease-out-sine-medium
			);

			.mw-placeholder();

			&:focus {
				outline: 0;
				border-color: @border-color-base--focus;
				box-shadow: @box-shadow-widget--focus;
			}

			&[ readonly ] {
				background-color: @background-color-base--read-only;
			}
		}

		&:hover {
			input,
			textarea {
				border-color: @border-color-input--hover;
			}
		}

		// HACK: Exclude IE/Edge (and Saf<6) from this selector as it
		// doesn't understand `outline-offset`. All other browsers do. :/
		@media screen {
			@media ( min-width: 0 ) {
				textarea:focus {
					outline: 1px solid @color-progressive;
					outline-offset: -2px;
				}
			}
		}

		&.oo-ui-flaggedElement-invalid {
			input,
			textarea {
				border-color: @border-color-erroneous;

				&:hover {
					border-color: @border-color-erroneous;
				}
				&:focus {
					border-color: @border-color-erroneous;
					box-shadow: @box-shadow-erroneous--focus;
				}
			}
		}
	}

	&.oo-ui-widget-disabled {
		input,
		textarea {
			background-color: @background-color-base--disabled;
			// Support: Safari
			-webkit-text-fill-color: @color-base--disabled;
			color: @color-base--disabled;
			text-shadow: @text-shadow-base--disabled;
			border-color: @border-color-base--disabled;
		}

		> .oo-ui-iconElement-icon,
		> .oo-ui-indicatorElement-indicator {
			opacity: @opacity-base--disabled;
		}

		> .oo-ui-labelElement-label {
			color: @color-base--disabled;
			text-shadow: @text-shadow-base--disabled;
		}
	}

	&.oo-ui-iconElement {
		input,
		textarea {
			padding-left: @padding-start-input-text-icon-label;
		}

		> .oo-ui-iconElement-icon {
			left: @padding-start-input-text-icon;
		}

		textarea + .oo-ui-iconElement-icon {
			max-height: @size-base; // Use `@size-base` as `max-height` for multiline TextInputWidgets
		}
	}

	> .oo-ui-labelElement-label {
		color: @color-base--subtle;
		margin-top: @border-width-base; // Address `border` on `input`
		padding: @padding-top-base @padding-horizontal-base @padding-bottom-base @padding-horizontal-input-text;
		line-height: @line-height-widget-singleline;
	}

	&.oo-ui-indicatorElement {
		input,
		textarea {
			padding-right: @size-indicator + 2 * @padding-horizontal-input-text;
		}

		&.oo-ui-textInputWidget-labelPosition-after > .oo-ui-labelElement-label {
			padding-right: 0;
		}

		> .oo-ui-indicatorElement-indicator {
			max-height: @size-base;
			margin-right: @padding-horizontal-base;
		}
	}

	&-labelPosition-after {
		&.oo-ui-indicatorElement > .oo-ui-labelElement-label {
			margin-right: @size-indicator + @padding-horizontal-base + @padding-horizontal-input-text;
		}
	}

	&-labelPosition-before {
		&.oo-ui-iconElement > .oo-ui-labelElement-label {
			padding-left: @padding-start-input-text-icon-label;
		}
	}
}

.theme-oo-ui-toggleWidget () {}

.theme-oo-ui-toggleButtonWidget () {
	.oo-ui-inline-spacing( 0.5em );
}

.theme-oo-ui-toggleSwitchWidget () {
	@travelDistance: 1.5em;
	background-color: @background-color-framed;
	width: @travelDistance + 2em;
	min-height: @min-height-toggleswitch;
	height: 2em;
	border: @border-input-binary;
	border-radius: 1em;
	.oo-ui-inline-spacing( 0.5em );
	.oo-ui-transition(
		background-color @transition-ease-medium,
		border-color @transition-ease-medium
	);

	&:before {
		content: '';
		display: block;
		position: absolute;
		top: 1px;
		left: 1px;
		bottom: 1px;
		right: 1px;
		border: 1px solid transparent;
		border-radius: 1em;
		z-index: 1;
		.oo-ui-transition(
			border-color @transition-ease-medium
		);
	}

	&-grip {
		top: 0.3125em;
		min-width: @size-toggleswitch-grip-min;
		width: 1.25em;
		min-height: @size-toggleswitch-grip-min;
		height: 1.25em;
		border-radius: 1.25em;
		.oo-ui-transition(
			background-color @transition-ease-medium,
			left @transition-ease-quick,
			margin-left @transition-ease-quick
		);
	}

	&-glow {
		// We don't need this for any effects, we have the background on parent element
		display: none;
	}

	&.oo-ui-toggleWidget-off {
		.oo-ui-toggleSwitchWidget-grip {
			left: 0.4em;
			margin-left: 0;
		}
	}

	&.oo-ui-toggleWidget-on {
		.oo-ui-toggleSwitchWidget-grip {
			left: @travelDistance + 0.4em;
			margin-left: -2px;
		}
	}

	&.oo-ui-widget-enabled {
		.oo-ui-toggleSwitchWidget-grip {
			background-color: @background-color-framed;
			border: @border-input-binary;
		}

		&:hover {
			background-color: @background-color-framed--hover;
			border-color: @color-progressive--hover;

			.oo-ui-toggleSwitchWidget-grip {
				background-color: @background-color-framed--hover;
				border-color: @color-progressive--hover;
			}
		}
		&:active,
		&:active:hover,
		&:active:focus {
			background-color: @background-color-input-binary--active;
			border-color: @border-color-input-binary--active;
			box-shadow: @box-shadow-input-binary--active;

			.oo-ui-toggleSwitchWidget-grip {
				background-color: @background-color-base;
				border-color: @background-color-base;
				box-shadow: @box-shadow-input-binary;
			}
		}
		&:focus {
			border-color: @color-progressive;
			box-shadow: @box-shadow-widget--focus;
			outline: 0;

			.oo-ui-toggleSwitchWidget-grip {
				border-color: @color-progressive;
			}
		}

		&.oo-ui-toggleWidget-on {
			background-color: @background-color-input-binary--checked;
			border-color: @border-color-input-binary--checked;

			.oo-ui-toggleSwitchWidget-grip {
				background-color: @background-color-base;
				border-color: @background-color-base;
				box-shadow: @box-shadow-input-binary;
			}

			&:hover {
				background-color: @color-progressive--hover;
				border-color: @color-progressive--hover;
			}
			&:active,
			&:active:hover {
				background-color: @background-color-input-binary--active;
				border-color: @border-color-input-binary--active;
			}
			&:focus {
				border-color: @border-color-input-binary--checked;

				&:before {
					border-color: @color-base--inverted;
				}
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-filled--disabled;
		border-color: @border-color-base--disabled;
		outline: 0; // Chrome when element has `tabindex` attribute

		&.oo-ui-toggleWidget-off .oo-ui-toggleSwitchWidget-grip {
			border: @border-filled--disabled;
			box-shadow: @box-shadow-filled--disabled;
		}

		&.oo-ui-toggleWidget-on .oo-ui-toggleSwitchWidget-grip {
			background-color: @background-color-base;
		}
	}
}

.mw-placeholder () {
	// Normalize placeholder styling, see T139034
	// stylelint-disable indentation
	.oo-ui-placeholder( {
		color: @color-placeholder;
		opacity: 1;
	} );
	// stylelint-enable indentation
}
