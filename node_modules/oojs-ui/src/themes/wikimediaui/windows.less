@import 'common';

.theme-oo-ui-window () {
	background: transparent;
}

.theme-oo-ui-dialog () {
}

.theme-oo-ui-messageDialog () {
	&-content > .oo-ui-window-foot {
		outline: @border-dialog; // Using `@border-dialog` here as `outline` is `border` subsitute
	}

	&-title,
	&-message {
		display: block;
		text-align: center;

		&.oo-ui-labelElement {
			padding-top: 0.5em;
		}
	}

	&-title {
		font-size: 1.5em;
		line-height: 1;
		color: @color-base--emphasized;
	}

	&-message {
		font-size: 1.1em;
		line-height: @line-height-message;
		color: @color-base;
		text-align: left;
	}

	&-actions {
		&-horizontal {
			.oo-ui-actionWidget {
				border-right: @border-base;
				margin: 0;

				&:last-child {
					border-right-width: 0;
				}
			}
		}

		&-vertical {
			.oo-ui-actionWidget {
				border-bottom: @border-base;
				margin: 0;

				&:last-child {
					border-bottom-width: 0;
				}
			}
		}

		.oo-ui-actionWidget {
			min-height: @size-dialog-bar-top;
			.oo-ui-inline-spacing( 0 );

			// Reset Frameless ButtonWidgets
			&:first-child {
				margin-left: 0;
			}

			.oo-ui-buttonElement-button {
				border: 0;
				border-radius: 0;
				padding: 0;
			}

			&.oo-ui-labelElement .oo-ui-labelElement-label {
				line-height: @size-dialog-bar-top;
				text-align: center;
			}

			&.oo-ui-widget-enabled {
				.oo-ui-buttonElement-button {
					&:hover {
						background-color: @background-color-framed; // Invert button color logic without defining var (yet)
					}

					&:active {
						background-color: @background-color-framed--active;
					}

					&:focus {
						box-shadow: @box-shadow-action--focus;
					}
				}

				&.oo-ui-flaggedElement {
					&-progressive,
					&-constructive { // `constructive` got deprecated in v0.16.1
						.oo-ui-buttonElement-button {
							&:hover {
								background-color: @background-color-progressive; // Context-specific color var “misuse”
							}

							&:active {
								background-color: rgba( 8, 126, 204, 0.1 );
							}
						}

						.oo-ui-labelElement-label {
							font-weight: bold;
						}
					}

					&-destructive {
						.oo-ui-buttonElement-button {
							&:hover {
								background-color: @background-color-destructive;
							}

							&:active {
								background-color: rgba( 212, 83, 83, 0.1 );
							}
						}
					}
				}
			}
		}
	}
}

.theme-oo-ui-processDialog () {
	&-content {
		.oo-ui-window-head {
			height: @size-dialog-bar-top;
		}

		.oo-ui-window-body {
			top: @size-dialog-bar-top;
			outline: @border-dialog-bar; // Using `@border-dialog-bar` here as `outline` is `border` subsitute
		}
	}

	&-navigation {
		position: relative;
		height: @size-dialog-bar-top;
	}

	&-location {
		height: @size-dialog-bar-top;
		cursor: default;
		text-align: center;
	}

	&-title {
		font-weight: bold;
		line-height: @size-dialog-bar-top;
	}

	&-actions {
		&-safe,
		&-primary,
		&-other {
			.oo-ui-actionWidget {
				&.oo-ui-buttonElement-framed {
					margin: @margin-dialog-bar-button-framed;
				}

				&.oo-ui-buttonElement-frameless {
					&.oo-ui-iconElement {
						&:first-child {
							margin-left: 0;
						}

						> .oo-ui-buttonElement-button {
							padding-left: @size-icon + 1em;
							// Use min-height as height includes borders
							padding-top: 0;
							min-height: @size-dialog-bar-top;

							> .oo-ui-iconElement-icon {
								left: 0.5em;
							}
						}
					}

					&.oo-ui-labelElement {
						&:first-child {
							margin-left: 0;
						}

						> .oo-ui-buttonElement-button {
							padding: 0.75em 1em;
						}

						&.oo-ui-iconElement {
							> .oo-ui-buttonElement-button {
								padding-left: @size-icon + 0.75em;
							}
						}
					}

					.oo-ui-labelElement-label {
						line-height: @size-icon;
					}
				}
			}
		}

		&-safe,
		&-primary {
			.oo-ui-actionWidget.oo-ui-buttonElement-frameless {
				&:hover {
					background-color: rgba( 0, 0, 0, 0.05 );
				}

				&:active {
					background-color: rgba( 0, 0, 0, 0.1 );
				}

				&.oo-ui-flaggedElement {
					&-progressive,
					&-constructive { // `constructive` got deprecated in v0.16.1
						&:hover {
							background-color: rgba( 8, 126, 204, 0.05 );
						}

						&:active {
							background-color: rgba( 8, 126, 204, 0.1 );
						}

						.oo-ui-labelElement-label {
							font-weight: bold;
						}
					}

					&-destructive {
						&:hover {
							background-color: rgba( 212, 83, 83, 0.05 );
						}

						&:active {
							background-color: rgba( 212, 83, 83, 0.1 );
						}
					}
				}
			}
		}

		&-other {
			.oo-ui-actionWidget {
				&.oo-ui-buttonElement {
					margin-right: 0;
				}
			}
		}
	}

	> .oo-ui-window-frame {
		min-height: 5em;
	}

	&-errors {
		background-color: rgba( 255, 255, 255, 0.9 );
		padding: 3em 3em 1.5em 3em;
		text-align: center;

		.oo-ui-buttonWidget {
			margin: 2em 1em 2em 1em;
		}

		&-title {
			font-size: 1.5em;
			color: @color-base--emphasized;
			margin-bottom: 2em;
		}
	}

	&-error {
		text-align: left;
		margin: 1em;
		padding: 1em;
		border: @border-width-base solid @border-color-erroneous;
		background-color: #fff7f7;
		border-radius: @border-radius-base;
	}
}

.theme-oo-ui-windowManager () {
	&-modal > .oo-ui-dialog {
		background-color: rgba( 255, 255, 255, 0.5 );
		opacity: 0;
		.oo-ui-transition( opacity @transition-ease-medium );

		> .oo-ui-window-frame {
			background-color: @background-color-base;
			opacity: 0;
			.oo-ui-transform( scale( 0.5 ) );
			.oo-ui-transition( all @transition-ease-medium );
		}

		&.oo-ui-window-setup {
			// Fade window overlay
			opacity: 1;
		}

		&.oo-ui-window-ready {
			> .oo-ui-window-frame {
				// Fade frame
				opacity: 1;
				.oo-ui-transform( scale( 1 ) );
			}
		}
	}

	&-modal&-floating > .oo-ui-dialog > .oo-ui-window-frame {
		top: 1em;
		bottom: 1em;
		max-height: 100%;
		max-height: e( 'calc( 100% - 2em )' );
		border: @border-dialog;
		border-radius: @border-radius-base;
		box-shadow: @box-shadow-dialog;
	}
}
